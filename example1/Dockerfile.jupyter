# Instructions to get this to work :)
FROM ubuntu:20.04

# Prelminaries
# Make sure you install and get neo4j running as is described in my video on Canvas.

# Once you get neo4j running, please create a new project with a new local DBMS. Make sure you also install the APOC plugin.

# Python setup

RUN apt upgrade && apt-get -y --no-install-recommends update

RUN apt-get -y install software-properties-common

RUN add-apt-repository ppa:deadsnakes/ppa

RUN apt-get -y update

RUN apt-get -y install python3.9 \
    python3.9-distutils \
    python3.9-dev \
    wget

RUN wget https://bootstrap.pypa.io/get-pip.py

RUN python3.9 ./get-pip.py

# NOTE: no need to create venv in docker
# RUN python3.9 -m pip install virtualenv
# RUN virtualenv --py `which python3.9` spacey_pipeline
# RUN source spacey_pipeline/bin/activate

RUN pip install --upgrade pip

RUN apt-get -y install make g++

# For some reason running these all in the same pip install fails
RUN pip install jupyter
RUN pip install notebook==6.*
RUN pip install numpy
RUN pip install crosslingual-coreference==0.2.3
RUN pip install spacy-transformers==1.1.5
RUN pip install wikipedia
RUN pip install neo4j
RUN pip install transformers==4.18.0

RUN python3.9 -m spacy download en_core_web_sm

RUN python3.9 -m spacy download en_core_web_lg

RUN python3.9 -m ipykernel install --user --name spacey_pipeline

# Now you can start jupyter lab and run the kernel called spacey_pipeline.

EXPOSE 8888

WORKDIR /example1

COPY ["Small Example1.ipynb", "."]

COPY ["domains/", "domains"]

COPY ["Groups.ipynb", "."]

# Run it once to get the downloads out of the way and cached in the image
RUN ["jupyter", "nbconvert", "--execute", "--to", "notebook", "--inplace", "--allow-errors", "--ExecutePreprocessor.timeout=-1", "Groups.ipynb"]

CMD ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root", "--NotebookApp.token=''", "--NotebookApp.password=''"]

